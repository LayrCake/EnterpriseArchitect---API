/*------------------------------------------------------------------------------
<auto-generated>
     This code was generated by a tool.
	    Code originates from EA Uml ClassTemplate.t4
     Changes to this file will be lost if the code is regenerated.
	    Code Generated Date: 	10 June 2018
	    ProjectModel: 			LayrCake
	    Requested Namespace:	Model$2. Hosting Model$LayrCake.StaticModel$LayrCake$StaticModel$ViewModelObjects$Implementation
</auto-generated>
------------------------------------------------------------------------------*/
using LayrCake.StaticModel.Criteria.Implementation;
using LayrCake.StaticModel.Repositories;
using LayrCake.StaticModel.Repositories.Abstract;
using LayrCake.StaticModel.Repositories.Implementation;
using LayrCake.StaticModel.ViewModelObjects.Implementation;
using Infrastructure.TestsData.HelpersWeb;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using vwmo = Infrastructure.TestData._StaticModel.ViewModelObjects;

namespace LayrCake.StaticModel.Tests.Repositories.Generated.LiveModelTests
{
    [TestClass]
    public class StaticModel_6_DDDPackageRepository_Tests : BaseTestInitialise
    {
        private IDDDPackageRepository dDDPackageRepository;

        [TestInitialize]
        public void Test_Setup()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                dDDPackageRepository = new DDDPackageRepository();
            }
        }
		
        [TestMethod]
        public void Generated_Repository_DDDPackage_Initialise()
        {
            Assert.IsNotNull(dDDPackageRepository);
        }

        [TestMethod]
        public void Generated_Repository_DDDPackage_Insert_Test()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                var response = dDDPackageRepository.Insert(vwmo.VWMbjectsFactory.CreateNew<DDDPackageVwm>());
                Assert.IsNotNull(response, "Response object is null");
                Assert.IsTrue(response.DDDPackageID > 0, "Response DDDPackageId is not greater than 0 - Insert Failed");
            }
        }

        [TestMethod]
        public void Generated_Repository_DDDPackage_Update_Test()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                var response = dDDPackageRepository.Insert(vwmo.VWMbjectsFactory.CreateNew<DDDPackageVwm>());
                Assert.IsNotNull(response, "Response object is null");
                Assert.IsTrue(response.DDDPackageID > 0, "Response DDDPackageId is not greater than 0 - Insert Failed");

                var responseUpdate = dDDPackageRepository.Update(response);
                Assert.IsNotNull(responseUpdate, "Response object is null");
                Assert.IsTrue(responseUpdate.DDDPackageID == response.DDDPackageID, "Response DDDPackageId is not greater than 0 - Insert Failed");
            }
        }

        [TestMethod]
        public void Generated_Repository_DDDPackage_Delete_Test()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                var response = dDDPackageRepository.Insert(vwmo.VWMbjectsFactory.CreateNew<DDDPackageVwm>());
                Assert.IsNotNull(response, "Response object is null");
                Assert.IsTrue(response.DDDPackageID > 0, "ResponseDDDPackageId is not greater than 0 - Insert Failed");

                var responseDelete = dDDPackageRepository.Delete(response);
                Assert.IsNull(responseDelete, "Response object is not null");

                var responseGet = dDDPackageRepository.Get(response.DDDPackageID);
                Assert.IsNull(responseGet, "Response object was not deleted");
            }
        }

        [TestMethod]
        public void Generated_Repository_DDDPackage_GetAll_Test()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                var response = dDDPackageRepository.GetList();
                Assert.IsNotNull(response, "Response object is null");
                Assert.IsTrue(response.Count > 0, "Response object count is 0");
            }
        }

        [TestMethod]
        public void Generated_Repository_DDDPackage_GetAll_WithCriteria_Test()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                var criteria = new DDDPackageVwmCriteria();
                var response = dDDPackageRepository.GetList(criteria);
                Assert.IsNotNull(response, "Response object is null");
                Assert.IsTrue(response.Count > 0, "Response object count is 0");
            }
        }

        [TestMethod]
        public void Generated_Repository_DDDPackage_GetSingle_Test()
        {
            using (new HttpSimulator("/", @"c:\inetpub\").SimulateRequest())
            {
                var response = dDDPackageRepository.Insert(vwmo.VWMbjectsFactory.CreateNew<DDDPackageVwm>());
                Assert.IsNotNull(response, "Response object is null");
                Assert.IsTrue(response.DDDPackageID > 0, "Response DDDPackageId is not greater than 0 - Insert Failed");

                var responseGet = dDDPackageRepository.Get(response.DDDPackageID);
                Assert.IsNotNull(responseGet, "Response object is null");
                Assert.IsTrue(responseGet.DDDPackageID == response.DDDPackageID, "Response didn't return the correct DDDPackage record");
            }
        }
	}
}

