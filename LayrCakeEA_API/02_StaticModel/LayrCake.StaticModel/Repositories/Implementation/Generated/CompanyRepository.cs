/*------------------------------------------------------------------------------
<auto-generated>
     This code was generated by a tool.
	    Code originates from EA Uml ClassTemplate.t4
     Changes to this file will be lost if the code is regenerated.
	    Code Generated Date: 	11 June 2018
	    ProjectModel: 			LayrCake
	    Requested Namespace:	Model$2. Hosting Model$LayrCake.StaticModel$LayrCake$StaticModel$ViewModelObjects$Implementation
</auto-generated>
------------------------------------------------------------------------------*/
using System;
using System.Collections.Generic;
using LayrCake.StaticModel.Repositories.Abstract;
using LayrCake.StaticModel.StaticModelReserved;
using LayrCake.StaticModel.Criteria.Implementation;
using LayrCake.StaticModel.ViewModelObjects.Implementation;
using LayrCake.StaticModel.DataVisualiserServiceReference;
using IVwmCriteria = LayrCake.StaticModel.Criteria.IVwmCriteria;
using StaticModel.Repositories;
using System.Linq;
using Mapper = LayrCake.StaticModel.ModelMapper.Mapper;

namespace LayrCake.StaticModel.Repositories.Implementation
{
    public partial class CompanyRepository : RepositoryBase, ICompanyRepository
    {
        public List<CompanyVwm> GetList(IVwmCriteria criterion = null) //Criterion
        {
            var request = new CompanyRequest().Prepare();
			var companyVwmList = new List<CompanyVwm>();
            request.LoadOptions = ServiceLoadOptions.List;
            request.Action = PersistType.Read;
            if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((CompanyVwmCriteria)criterion);
            }

            var response = Client.GetCompanies(request);
            Correlate(request, response);

            if (response.Companies != null && response.Companies.Length > 0)
            {
                foreach (var company in response.Companies)
                    companyVwmList.Add(Mapper.ToViewModelObject(company));
                //companyVwmList.AddRange(response.Companies.ToList().Select(x => Mapper.ToViewModelObject(x)));
                return companyVwmList;
            }
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return new List<CompanyVwm>();
        }

		public IQueryable<CompanyVwm> GetListQuery(IVwmCriteria criterion = null)
        {
            return GetList(criterion).AsQueryable();
        }

        public CompanyVwm Get(int id)
        {
            var request = new CompanyRequest().Prepare();
            request.Action = PersistType.Read;
            request.LoadOptions = ServiceLoadOptions.Single;
            request.GetByPrimaryKey = id;

            var response = Client.GetCompanies(request);
            Correlate(request, response);

            if (response.Company != null && response.Company.CompanyID == id)
                return Mapper.ToViewModelObject(response.Company);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

		public CompanyVwm Get(IVwmCriteria criterion = null)
        {
            var request = new CompanyRequest().Prepare();
            request.Action = PersistType.Read;
            request.LoadOptions = ServiceLoadOptions.Single;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((CompanyVwmCriteria)criterion);
            }

            var response = Client.GetCompanies(request);
            Correlate(request, response);

            if (response.Company != null)
                return Mapper.ToViewModelObject(response.Company);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public int GetCount(IVwmCriteria criterion = null)
        {
            return GetList(criterion).Count;
        }

        public CompanyVwm Insert(CompanyVwm viewModelObj)
        {
            var request = new CompanyRequest().Prepare();
            request.Action = PersistType.Insert;
            request.Company = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetCompanies(request);
            Correlate(request, response);

            if (response.Company != null && response.Company.CompanyID > 0)
                return Mapper.ToViewModelObject(response.Company);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public CompanyVwm Update(CompanyVwm viewModelObj)
        {
            var request = new CompanyRequest().Prepare();

            request.Action = PersistType.Update;
            request.Company = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetCompanies(request);
            Correlate(request, response);

            if (response.Company != null && response.Company.CompanyID > 0)
                return Mapper.ToViewModelObject(response.Company);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

		/// <summary>
        /// Updates all records based upon an Where Statement Criteria
        /// </summary>
        /// <param name="viewModelObj"></param>
        /// <returns></returns>
		public List<CompanyVwm> Update(IVwmCriteria criterion = null)
        {
            var request = new CompanyRequest().Prepare();
            var companyVwmList = new List<CompanyVwm>();

            request.Action = PersistType.Update;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((CompanyVwmCriteria)criterion);
            }

            var response = Client.SetCompanies(request);
            Correlate(request, response);

            if (response.Companies != null && response.Companies.Length > 0)
            {
                foreach (var company in response.Companies)
                    companyVwmList.Add(Mapper.ToViewModelObject(company));
                //companyVwmList.AddRange(response.Companies.ToList().Select(x => Mapper.ToViewModelObject(x)));
                return companyVwmList;
            }
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return new List<CompanyVwm>();
        }


        public CompanyVwm Delete(int id)
        {
            var request = new CompanyRequest().Prepare();

            request.Action = PersistType.Delete;
            request.Company = new Company() { CompanyID = id };
			//request.Criteria = new CompanyCriteria() { CompanyID = id };

            var response = Client.SetCompanies(request);
            Correlate(request, response);

            if (response.Company != null && response.Company.CompanyID == id)
                return Mapper.ToViewModelObject(response.Company);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public CompanyVwm Delete(CompanyVwm viewModelObj)
        {
            var request = new CompanyRequest().Prepare();

            request.Action = PersistType.Delete;
            request.Company = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetCompanies(request);
            Correlate(request, response);

            if (response.Company != null && response.Company.CompanyID > 0 && response.Company.CompanyID == viewModelObj.CompanyID)
                return Mapper.ToViewModelObject(response.Company);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        /// <summary>
        /// Deletes all records based upon an Where Statement Criteria
        /// </summary>
        /// <param name="viewModelObj"></param>
        /// <returns></returns>
		public CompanyVwm Delete(IVwmCriteria criterion = null)
        {
            var request = new CompanyRequest().Prepare();

            request.Action = PersistType.Delete;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((CompanyVwmCriteria)criterion);
            }

            var response = Client.SetCompanies(request);
            Correlate(request, response);

			if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }
	}
}

