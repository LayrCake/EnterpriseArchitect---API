/*------------------------------------------------------------------------------
<auto-generated>
     This code was generated by a tool.
	    Code originates from EA Uml ClassTemplate.t4
     Changes to this file will be lost if the code is regenerated.
	    Code Generated Date: 	11 June 2018
	    ProjectModel: 			LayrCake
	    Requested Namespace:	Model$2. Hosting Model$LayrCake.StaticModel$LayrCake$StaticModel$ViewModelObjects$Implementation
</auto-generated>
------------------------------------------------------------------------------*/
using System;
using System.Collections.Generic;
using LayrCake.StaticModel.Repositories.Abstract;
using LayrCake.StaticModel.StaticModelReserved;
using LayrCake.StaticModel.Criteria.Implementation;
using LayrCake.StaticModel.ViewModelObjects.Implementation;
using LayrCake.StaticModel.DataVisualiserServiceReference;
using IVwmCriteria = LayrCake.StaticModel.Criteria.IVwmCriteria;
using StaticModel.Repositories;
using System.Linq;
using Mapper = LayrCake.StaticModel.ModelMapper.Mapper;

namespace LayrCake.StaticModel.Repositories.Implementation
{
    public partial class DDDSolutionRepository : RepositoryBase, IDDDSolutionRepository
    {
        public List<DDDSolutionVwm> GetList(IVwmCriteria criterion = null) //Criterion
        {
            var request = new DDDSolutionRequest().Prepare();
			var dDDSolutionVwmList = new List<DDDSolutionVwm>();
            request.LoadOptions = ServiceLoadOptions.List;
            request.Action = PersistType.Read;
            if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((DDDSolutionVwmCriteria)criterion);
            }

            var response = Client.GetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolutions != null && response.DDDSolutions.Length > 0)
            {
                foreach (var dDDSolution in response.DDDSolutions)
                    dDDSolutionVwmList.Add(Mapper.ToViewModelObject(dDDSolution));
                //dDDSolutionVwmList.AddRange(response.DDDSolutions.ToList().Select(x => Mapper.ToViewModelObject(x)));
                return dDDSolutionVwmList;
            }
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return new List<DDDSolutionVwm>();
        }

		public IQueryable<DDDSolutionVwm> GetListQuery(IVwmCriteria criterion = null)
        {
            return GetList(criterion).AsQueryable();
        }

        public DDDSolutionVwm Get(int id)
        {
            var request = new DDDSolutionRequest().Prepare();
            request.Action = PersistType.Read;
            request.LoadOptions = ServiceLoadOptions.Single;
            request.GetByPrimaryKey = id;

            var response = Client.GetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolution != null && response.DDDSolution.DDDSolutionID == id)
                return Mapper.ToViewModelObject(response.DDDSolution);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

		public DDDSolutionVwm Get(IVwmCriteria criterion = null)
        {
            var request = new DDDSolutionRequest().Prepare();
            request.Action = PersistType.Read;
            request.LoadOptions = ServiceLoadOptions.Single;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((DDDSolutionVwmCriteria)criterion);
            }

            var response = Client.GetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolution != null)
                return Mapper.ToViewModelObject(response.DDDSolution);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public int GetCount(IVwmCriteria criterion = null)
        {
            return GetList(criterion).Count;
        }

        public DDDSolutionVwm Insert(DDDSolutionVwm viewModelObj)
        {
            var request = new DDDSolutionRequest().Prepare();
            request.Action = PersistType.Insert;
            request.DDDSolution = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolution != null && response.DDDSolution.DDDSolutionID > 0)
                return Mapper.ToViewModelObject(response.DDDSolution);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public DDDSolutionVwm Update(DDDSolutionVwm viewModelObj)
        {
            var request = new DDDSolutionRequest().Prepare();

            request.Action = PersistType.Update;
            request.DDDSolution = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolution != null && response.DDDSolution.DDDSolutionID > 0)
                return Mapper.ToViewModelObject(response.DDDSolution);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

		/// <summary>
        /// Updates all records based upon an Where Statement Criteria
        /// </summary>
        /// <param name="viewModelObj"></param>
        /// <returns></returns>
		public List<DDDSolutionVwm> Update(IVwmCriteria criterion = null)
        {
            var request = new DDDSolutionRequest().Prepare();
            var dDDSolutionVwmList = new List<DDDSolutionVwm>();

            request.Action = PersistType.Update;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((DDDSolutionVwmCriteria)criterion);
            }

            var response = Client.SetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolutions != null && response.DDDSolutions.Length > 0)
            {
                foreach (var dDDSolution in response.DDDSolutions)
                    dDDSolutionVwmList.Add(Mapper.ToViewModelObject(dDDSolution));
                //dDDSolutionVwmList.AddRange(response.DDDSolutions.ToList().Select(x => Mapper.ToViewModelObject(x)));
                return dDDSolutionVwmList;
            }
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return new List<DDDSolutionVwm>();
        }


        public DDDSolutionVwm Delete(int id)
        {
            var request = new DDDSolutionRequest().Prepare();

            request.Action = PersistType.Delete;
            request.DDDSolution = new DDDSolution() { DDDSolutionID = id };
			//request.Criteria = new DDDSolutionCriteria() { DDDSolutionID = id };

            var response = Client.SetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolution != null && response.DDDSolution.DDDSolutionID == id)
                return Mapper.ToViewModelObject(response.DDDSolution);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public DDDSolutionVwm Delete(DDDSolutionVwm viewModelObj)
        {
            var request = new DDDSolutionRequest().Prepare();

            request.Action = PersistType.Delete;
            request.DDDSolution = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetDDDSolutions(request);
            Correlate(request, response);

            if (response.DDDSolution != null && response.DDDSolution.DDDSolutionID > 0 && response.DDDSolution.DDDSolutionID == viewModelObj.DDDSolutionID)
                return Mapper.ToViewModelObject(response.DDDSolution);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        /// <summary>
        /// Deletes all records based upon an Where Statement Criteria
        /// </summary>
        /// <param name="viewModelObj"></param>
        /// <returns></returns>
		public DDDSolutionVwm Delete(IVwmCriteria criterion = null)
        {
            var request = new DDDSolutionRequest().Prepare();

            request.Action = PersistType.Delete;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((DDDSolutionVwmCriteria)criterion);
            }

            var response = Client.SetDDDSolutions(request);
            Correlate(request, response);

			if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }
	}
}

