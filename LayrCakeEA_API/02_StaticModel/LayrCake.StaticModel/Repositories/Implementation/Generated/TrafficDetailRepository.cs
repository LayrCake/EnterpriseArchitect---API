/*------------------------------------------------------------------------------
<auto-generated>
     This code was generated by a tool.
	    Code originates from EA Uml ClassTemplate.t4
     Changes to this file will be lost if the code is regenerated.
	    Code Generated Date: 	11 June 2018
	    ProjectModel: 			LayrCake
	    Requested Namespace:	Model$2. Hosting Model$LayrCake.StaticModel$LayrCake$StaticModel$ViewModelObjects$Implementation
</auto-generated>
------------------------------------------------------------------------------*/
using System;
using System.Collections.Generic;
using LayrCake.StaticModel.Repositories.Abstract;
using LayrCake.StaticModel.StaticModelReserved;
using LayrCake.StaticModel.Criteria.Implementation;
using LayrCake.StaticModel.ViewModelObjects.Implementation;
using LayrCake.StaticModel.DataVisualiserServiceReference;
using IVwmCriteria = LayrCake.StaticModel.Criteria.IVwmCriteria;
using StaticModel.Repositories;
using System.Linq;
using Mapper = LayrCake.StaticModel.ModelMapper.Mapper;

namespace LayrCake.StaticModel.Repositories.Implementation
{
    public partial class TrafficDetailRepository : RepositoryBase, ITrafficDetailRepository
    {
        public List<TrafficDetailVwm> GetList(IVwmCriteria criterion = null) //Criterion
        {
            var request = new TrafficDetailRequest().Prepare();
			var trafficDetailVwmList = new List<TrafficDetailVwm>();
            request.LoadOptions = ServiceLoadOptions.List;
            request.Action = PersistType.Read;
            if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((TrafficDetailVwmCriteria)criterion);
            }

            var response = Client.GetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetails != null && response.TrafficDetails.Length > 0)
            {
                foreach (var trafficDetail in response.TrafficDetails)
                    trafficDetailVwmList.Add(Mapper.ToViewModelObject(trafficDetail));
                //trafficDetailVwmList.AddRange(response.TrafficDetails.ToList().Select(x => Mapper.ToViewModelObject(x)));
                return trafficDetailVwmList;
            }
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return new List<TrafficDetailVwm>();
        }

		public IQueryable<TrafficDetailVwm> GetListQuery(IVwmCriteria criterion = null)
        {
            return GetList(criterion).AsQueryable();
        }

        public TrafficDetailVwm Get(int id)
        {
            var request = new TrafficDetailRequest().Prepare();
            request.Action = PersistType.Read;
            request.LoadOptions = ServiceLoadOptions.Single;
            request.GetByPrimaryKey = id;

            var response = Client.GetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetail != null && response.TrafficDetail.TrafficDetailID == id)
                return Mapper.ToViewModelObject(response.TrafficDetail);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

		public TrafficDetailVwm Get(IVwmCriteria criterion = null)
        {
            var request = new TrafficDetailRequest().Prepare();
            request.Action = PersistType.Read;
            request.LoadOptions = ServiceLoadOptions.Single;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((TrafficDetailVwmCriteria)criterion);
            }

            var response = Client.GetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetail != null)
                return Mapper.ToViewModelObject(response.TrafficDetail);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public int GetCount(IVwmCriteria criterion = null)
        {
            return GetList(criterion).Count;
        }

        public TrafficDetailVwm Insert(TrafficDetailVwm viewModelObj)
        {
            var request = new TrafficDetailRequest().Prepare();
            request.Action = PersistType.Insert;
            request.TrafficDetail = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetail != null && response.TrafficDetail.TrafficDetailID > 0)
                return Mapper.ToViewModelObject(response.TrafficDetail);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public TrafficDetailVwm Update(TrafficDetailVwm viewModelObj)
        {
            var request = new TrafficDetailRequest().Prepare();

            request.Action = PersistType.Update;
            request.TrafficDetail = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetail != null && response.TrafficDetail.TrafficDetailID > 0)
                return Mapper.ToViewModelObject(response.TrafficDetail);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

		/// <summary>
        /// Updates all records based upon an Where Statement Criteria
        /// </summary>
        /// <param name="viewModelObj"></param>
        /// <returns></returns>
		public List<TrafficDetailVwm> Update(IVwmCriteria criterion = null)
        {
            var request = new TrafficDetailRequest().Prepare();
            var trafficDetailVwmList = new List<TrafficDetailVwm>();

            request.Action = PersistType.Update;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((TrafficDetailVwmCriteria)criterion);
            }

            var response = Client.SetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetails != null && response.TrafficDetails.Length > 0)
            {
                foreach (var trafficDetail in response.TrafficDetails)
                    trafficDetailVwmList.Add(Mapper.ToViewModelObject(trafficDetail));
                //trafficDetailVwmList.AddRange(response.TrafficDetails.ToList().Select(x => Mapper.ToViewModelObject(x)));
                return trafficDetailVwmList;
            }
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return new List<TrafficDetailVwm>();
        }


        public TrafficDetailVwm Delete(int id)
        {
            var request = new TrafficDetailRequest().Prepare();

            request.Action = PersistType.Delete;
            request.TrafficDetail = new TrafficDetail() { TrafficDetailID = id };
			//request.Criteria = new TrafficDetailCriteria() { TrafficDetailID = id };

            var response = Client.SetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetail != null && response.TrafficDetail.TrafficDetailID == id)
                return Mapper.ToViewModelObject(response.TrafficDetail);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        public TrafficDetailVwm Delete(TrafficDetailVwm viewModelObj)
        {
            var request = new TrafficDetailRequest().Prepare();

            request.Action = PersistType.Delete;
            request.TrafficDetail = Mapper.FromViewModelObject(viewModelObj);

            var response = Client.SetTrafficDetails(request);
            Correlate(request, response);

            if (response.TrafficDetail != null && response.TrafficDetail.TrafficDetailID > 0 && response.TrafficDetail.TrafficDetailID == viewModelObj.TrafficDetailID)
                return Mapper.ToViewModelObject(response.TrafficDetail);
            else if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }

        /// <summary>
        /// Deletes all records based upon an Where Statement Criteria
        /// </summary>
        /// <param name="viewModelObj"></param>
        /// <returns></returns>
		public TrafficDetailVwm Delete(IVwmCriteria criterion = null)
        {
            var request = new TrafficDetailRequest().Prepare();

            request.Action = PersistType.Delete;

			if (criterion != null)
            {
			    request.Criteria = Mapper.FromViewModelCriteria((TrafficDetailVwmCriteria)criterion);
            }

            var response = Client.SetTrafficDetails(request);
            Correlate(request, response);

			if (!string.IsNullOrEmpty(response.Message)) throw new Exception(response.Message);
            return null;
        }
	}
}

